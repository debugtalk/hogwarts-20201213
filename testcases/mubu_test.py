# NOTE: Generated By HttpRunner v3.1.4
# FROM: har/mubu.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseMubu(HttpRunner):

    config = (
        Config("testcase description")
        .base_url("https://api2.$host")
        .verify(False)
        .variables(**{
            "data_unique_id": "01302980-5f42-4477-adee-578a099263d9",
            "csrf_token": "d44043c4-e8e0-4425-893b-2e1465072455",
            "memberId": "1715103091276471",
            "host": "${get_test_host()}",
            "phone": "18613143458",
            "password": "mtFrwy$!kt3RTRq@QpqW",
        })
    )

    teststeps = [
        Step(
            RunRequest("/")
            .get("https://${host}/")
            .with_headers(
                **{
                    "upgrade-insecure-requests": "1",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
                    "sec-fetch-site": "none",
                    "sec-fetch-mode": "navigate",
                    "sec-fetch-user": "?1",
                    "sec-fetch-dest": "document",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_cookies(
                **{
                    "data_unique_id": "$data_unique_id",
                    "csrf_token": "$csrf_token",
                    "language": "en-US",
                    "country": "US",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "reg_entrance": "https%3A%2F%2F${host}%2F",
                    "use-redesign": "1",
                    "_gat_UA-77727571-3": "1",
                    "_gat": "1",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/login")
            .get("https://${host}/login")
            .with_headers(
                **{
                    "upgrade-insecure-requests": "1",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
                    "sec-fetch-site": "same-origin",
                    "sec-fetch-mode": "navigate",
                    "sec-fetch-user": "?1",
                    "sec-fetch-dest": "document",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_cookies(
                **{
                    "data_unique_id": "$data_unique_id",
                    "csrf_token": "$csrf_token",
                    "language": "en-US",
                    "country": "US",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "reg_entrance": "https%3A%2F%2F${host}%2F",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/login/password")
            .get("https://${host}/login/password")
            .with_headers(
                **{
                    "upgrade-insecure-requests": "1",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
                    "sec-fetch-site": "same-origin",
                    "sec-fetch-mode": "navigate",
                    "sec-fetch-user": "?1",
                    "sec-fetch-dest": "document",
                    "referer": "https://${host}/login",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_cookies(
                **{
                    "data_unique_id": "$data_unique_id",
                    "csrf_token": "$csrf_token",
                    "language": "en-US",
                    "country": "US",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "reg_entrance": "https%3A%2F%2F${host}%2F",
                    "use-redesign": "1",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/api/login/submit")
            .post("https://${host}/api/login/submit")
            .with_headers(
                **{
                    "content-length": "65",
                    "accept": "application/json, text/javascript, */*; q=0.01",
                    "x-requested-with": "XMLHttpRequest",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-origin",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/login/password",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_cookies(
                **{
                    "data_unique_id": "$data_unique_id",
                    "csrf_token": "$csrf_token",
                    "language": "en-US",
                    "country": "US",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "reg_entrance": "https%3A%2F%2F${host}%2F",
                    "use-redesign": "1",
                    "_gat": "1",
                }
            )
            .with_data(
                {
                    "phone": "$phone",
                    "password": "$password",
                    "remember": "true",
                }
            )
            .extract()
            .with_jmespath('cookies."Jwt-Token"', "jwt_token")
            .with_jmespath('cookies.user_persistence', "user_persistence")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
            .assert_equal("body.msg", None)
        ),
        Step(
            RunRequest("/app")
            .get("https://${host}/app")
            .with_headers(
                **{
                    "upgrade-insecure-requests": "1",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
                    "sec-fetch-site": "same-origin",
                    "sec-fetch-mode": "navigate",
                    "sec-fetch-user": "?1",
                    "sec-fetch-dest": "document",
                    "referer": "https://${host}/login/password",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_cookies(
                **{
                    "data_unique_id": "$data_unique_id",
                    "csrf_token": "$csrf_token",
                    "language": "en-US",
                    "country": "US",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "reg_entrance": "https%3A%2F%2F${host}%2F",
                    "use-redesign": "1",
                    "_gat": "1",
                    "Jwt-Token": "$jwt_token",
                    "user_persistence": "$user_persistence",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/")
            .get("/v3/")
            .with_headers(
                **{
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "accept": "image/avif,image/webp,image/apng,image/*,*/*;q=0.8",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "no-cors",
                    "sec-fetch-dest": "image",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_cookies(
                **{
                    "use-redesign": "1",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 17)
            .assert_equal("body.msg", "illegal request")
        ),
        Step(
            RunRequest("/v3/api/message/get_message_unread")
            .post("/v3/api/message/get_message_unread")
            .with_headers(
                **{
                    "content-length": "10",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"page": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/profile")
            .post("/v3/api/user/profile")
            .with_headers(
                **{
                    "content-length": "0",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_data("")
            .extract()
            .with_jmespath("body.data.id", "userId")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/get_all_documents_page")
            .post("/v3/api/list/get_all_documents_page")
            .with_headers(
                **{
                    "content-length": "12",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"start": ""})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/get_user_params")
            .post("/v3/api/user/get_user_params")
            .with_headers(
                **{
                    "content-length": "0",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_data("")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/star_relation/get")
            .get("/v3/api/list/star_relation/get")
            .with_headers(
                **{
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/advertisement/get")
            .post("/v3/api/advertisement/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/create_folder")
            .post("/v3/api/list/create_folder")
            .with_headers(
                **{
                    "content-length": "39",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"name": "hogwarts-demo", "folderId": "0"})
            .extract()
            .with_jmespath("headers.server", "server")
            .with_jmespath("body.data.folder.id", "folderId")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "42",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/create_doc")
            .post("/v3/api/list/create_doc")
            .with_headers(
                **{
                    "content-length": "35",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "type": 0})
            .extract()
            .with_jmespath("body.data.id", "docId")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/current_level")
            .post("/v3/api/user/current_level")
            .with_headers(
                **{
                    "content-length": "29",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"document_id": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/document/edit/get")
            .post("/v3/api/document/edit/get")
            .with_headers(
                **{
                    "content-length": "37",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"docId": "$docId", "password": ""})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/get_invite_count")
            .get("/v3/api/user/get_invite_count")
            .with_headers(
                **{
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/register")
            .get("/v3/api/colla/register")
            .with_headers(
                **{
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/members")
            .options("/v3/api/colla/members")
            .with_params(**{"memberId": "${memberId}", "documentId": "$docId"})
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "GET",
                    "access-control-request-headers": "data-unique-id,jwt-token,request-id,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/colla/members")
            .get("/v3/api/colla/members")
            .with_params(**{"memberId": "${memberId}", "documentId": "$docId"})
            .with_headers(
                **{
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "members:${memberId}:1607839891209",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "404",
                    "member-id": "${memberId}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:${userId}:${memberId}:3",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 3,
                    "requestId": "MESSAGE:${userId}:${memberId}:3",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 0,
                            "content": [
                                {"name": "nameChanged", "title": "d", "original": ""},
                                {"name": "nameChanged", "title": "de", "original": "d"},
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "11.0.1",
                        "appVersion": "2.0.0.373",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "412",
                    "member-id": "${memberId}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:${userId}:${memberId}:6",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 6,
                    "requestId": "MESSAGE:${userId}:${memberId}:6",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 1,
                            "content": [
                                {
                                    "name": "nameChanged",
                                    "title": "dem",
                                    "original": "de",
                                },
                                {
                                    "name": "nameChanged",
                                    "title": "demo",
                                    "original": "dem",
                                },
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "11.0.1",
                        "appVersion": "2.0.0.373",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "653",
                    "member-id": "${memberId}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:${userId}:${memberId}:7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 7,
                    "requestId": "MESSAGE:${userId}:${memberId}:7",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 2,
                            "content": [
                                {
                                    "name": "create",
                                    "created": [
                                        {
                                            "index": 0,
                                            "parentId": None,
                                            "node": {
                                                "id": "mJNWbfiORR",
                                                "text": "",
                                                "modified": 1607839895792,
                                                "children": [],
                                            },
                                            "path": ["nodes", 0],
                                        }
                                    ],
                                },
                                {
                                    "name": "update",
                                    "updated": [
                                        {
                                            "updated": {
                                                "id": "mJNWbfiORR",
                                                "text": "<span>1</span>",
                                                "modified": 1607839896235,
                                            },
                                            "original": {
                                                "id": "mJNWbfiORR",
                                                "text": "",
                                                "modified": 1607839895792,
                                            },
                                            "path": ["nodes", 0],
                                        }
                                    ],
                                },
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "11.0.1",
                        "appVersion": "2.0.0.373",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "516",
                    "member-id": "${memberId}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:${userId}:${memberId}:9",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 9,
                    "requestId": "MESSAGE:${userId}:${memberId}:9",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 3,
                            "content": [
                                {
                                    "name": "update",
                                    "updated": [
                                        {
                                            "updated": {
                                                "id": "mJNWbfiORR",
                                                "text": "<span>111</span>",
                                                "modified": 1607839896727,
                                            },
                                            "original": {
                                                "id": "mJNWbfiORR",
                                                "text": "<span>1</span>",
                                                "modified": 1607839896235,
                                            },
                                            "path": ["nodes", 0],
                                        }
                                    ],
                                }
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "11.0.1",
                        "appVersion": "2.0.0.373",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "459",
                    "member-id": "${memberId}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:${userId}:${memberId}:11",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 11,
                    "requestId": "MESSAGE:${userId}:${memberId}:11",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 4,
                            "content": [
                                {
                                    "name": "create",
                                    "created": [
                                        {
                                            "index": 1,
                                            "parentId": None,
                                            "node": {
                                                "id": "wREJaChMWv",
                                                "text": "",
                                                "modified": 1607839897216,
                                                "children": [],
                                            },
                                            "path": ["nodes", 1],
                                        }
                                    ],
                                }
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "11.0.1",
                        "appVersion": "2.0.0.373",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "502",
                    "member-id": "${memberId}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:${userId}:${memberId}:13",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 13,
                    "requestId": "MESSAGE:${userId}:${memberId}:13",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 5,
                            "content": [
                                {
                                    "name": "update",
                                    "updated": [
                                        {
                                            "updated": {
                                                "id": "wREJaChMWv",
                                                "text": "<span>2</span>",
                                                "modified": 1607839897641,
                                            },
                                            "original": {
                                                "id": "wREJaChMWv",
                                                "text": "",
                                                "modified": 1607839897216,
                                            },
                                            "path": ["nodes", 1],
                                        }
                                    ],
                                }
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "11.0.1",
                        "appVersion": "2.0.0.373",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "518",
                    "member-id": "${memberId}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:${userId}:${memberId}:14",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 14,
                    "requestId": "MESSAGE:${userId}:${memberId}:14",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 6,
                            "content": [
                                {
                                    "name": "update",
                                    "updated": [
                                        {
                                            "updated": {
                                                "id": "wREJaChMWv",
                                                "text": "<span>222</span>",
                                                "modified": 1607839898379,
                                            },
                                            "original": {
                                                "id": "wREJaChMWv",
                                                "text": "<span>2</span>",
                                                "modified": 1607839897641,
                                            },
                                            "path": ["nodes", 1],
                                        }
                                    ],
                                }
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "11.0.1",
                        "appVersion": "2.0.0.373",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "42",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "content-type": "application/json;charset=UTF-8",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "226",
                    "member-id": "${memberId}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
                    "data-unique-id": "ab79efe0-3d08-11eb-8cea-196b8f1199e7",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:${userId}:${memberId}:17",
                    "x-request-id": "${gen_random_request_id()}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "en-US,en;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "UNWATCH",
                    "reqId": 17,
                    "requestId": "MESSAGE:${userId}:${memberId}:17",
                    "token": "$docId",
                    "data": {},
                    "context": {
                        "os": "macOS",
                        "osVersion": "11.0.1",
                        "appVersion": "2.0.0.373",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
    ]


if __name__ == "__main__":
    TestCaseMubu().test_start()
